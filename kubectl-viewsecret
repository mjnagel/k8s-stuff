#!/bin/sh
ns_flag=''
kube_config=''
label=''
secret=''
multiple_possible=''

# Loop through options to grab what we need
while test $# -gt 0; do
  case "$1" in
    -n|--namespace )
      shift
      ns_flag=$1
      shift
    ;;
    -k|--kubeconfig )
      shift
      kube_config=$1
      shift
    ;;
    -l|--label )
      shift
      label=$1
      shift
    ;;
    -* )
      echo "Option $1 not supported, run 'kubectl viewsecret help' for available options and examples."
      exit 1
    ;;
    help )
      echo "kubectl viewsecret options:\n\t-n (or --namespace): specify the namespace context\n\t-k (or --kubeconfig): specify the kubeconfig context\n\t-l (or --label): specify a label to use for grabbing secrets' contents\nkubectl viewsecret examples:\n\tkubectl viewsecret -k ~/mykubeconfig -n mynamespace mysecretname\n\tkubectl viewsecret -k ~/mykubeconfig -n mynamespace -l app=helloworld"
      exit 0
    ;;
    * )
      secret=$1
      shift
    ;;
  esac
done

# Start with base command
kubectl_command="kubectl get secret "

# Exit if no secret name provided
if [[ $secret != '' ]]; then
  kubectl_command+="${secret} "
  if [[ $label != '' ]]; then
    echo "ERROR: Both secret name and label provided. Only one of these options can be passed in a single command.\nRun 'kubectl viewsecret help' for available options and examples."
    exit 1
  fi
else
  if [[ $label != '' ]]; then
    kubectl_command+="-l $label "
    multiple_possible="true"
  else
    echo "ERROR: No secret name or label provided, run 'kubectl viewsecret help' for available options and examples."
    exit 1
  fi
fi

# Tack on ns flag as needed
if [[ $ns_flag != '' ]]; then
  kubectl_command+="-n ${ns_flag} "
fi

# Tack on kube config flag as needed
if [[ $kube_config != '' ]]; then
  kubectl_command+="--kubeconfig ${kube_config} "
fi

# Check if the secret exists
if [[ ! $($kubectl_command 2> /dev/null) ]]; then
  echo "ERROR: Secret not found, run 'kubectl viewsecret help' for available options and examples."
  exit 1
fi

# Add our fancy decode magic
if [[ $multiple_possible == "true" ]]; then
  kubectl_command+="-o go-template='{{range \$secret,\$contents := .items}}{{printf \"------\nSecret \`%s\`: \n------\n\" \$contents.metadata.name}}{{range \$k,\$v := \$contents.data}}{{printf \"Key \`%s\`: \n---\n\" \$k}}{{if not \$v}}{{\$v}}{{else}}{{\$v | base64decode}}{{end}}{{\"\n\n\"}}{{end}}{{end}}'"
else
  kubectl_command+="-o go-template='{{printf \"------\nSecret \`%s\`: \n------\n\" .metadata.name}}{{range \$k,\$v := .data}}{{printf \"Key \`%s\`: \n---\n\" \$k}}{{if not \$v}}{{\$v}}{{else}}{{\$v | base64decode}}{{end}}{{\"\n\n\"}}{{end}}'"
fi

# Execute
eval $kubectl_command